Name: Siddhanth Agrawal (sa3724)
Assignment: Lab 5
Date Submitted: Thursday, February 4, 2023 11:19:17 PM EST
Grader: Satwik Shresth
Grade: 55.0

Feedback:-
 -20    Late Submission: 47hours 19minutes 18seconds
-----------------------------------------------------------------------
Part-1 Reverse the string
-----------------------------------------------------------------------
 -2    Failed Test String      -> Go home, relax. Reverse this string.
       your ouput              ->  Go home, relax. Reverse this string.
       desired output          -> .gnirts siht esreveR .xaler ,emoh oG
       Similarity Percent      -> 27.397260273972602
-----------------------------------------------------------------------
 -2    Failed Test String      -> Can you handle this? Reverse it.
       your ouput              ->  Can you handle this? Reverse it.
       desired output          -> .ti esreveR ?siht eldnah uoy naC
       Similarity Percent      -> 27.692307692307693
-----------------------------------------------------------------------
 -2    Failed Test String      -> A quick brown fox jumps over the lazy dog. Reverse.
       your ouput              ->  A quick brown fox jumps over the lazy dog. Reverse.
       desired output          -> .esreveR .god yzal eht revo spmuj xof nworb kciuq A
       Similarity Percent      -> 11.650485436893204
-----------------------------------------------------------------------
 -2    Failed Test String      -> Easy come, easy go. Reverse it now.
       your ouput              ->  Easy come, easy go. Reverse it now.
       desired output          -> .won ti esreveR .og ysae ,emoc ysaE
       Similarity Percent      -> 30.985915492957744
-----------------------------------------------------------------------
 -2    Failed Test String      -> Action speaks louder than words. Reverse this.
       your ouput              ->  Action speaks louder than words. Reverse this.
       desired output          -> .siht esreveR .sdrow naht reduol skaeps noitcA
       Similarity Percent      -> 23.655913978494624
-----------------------------------------------------------------------
#include <stdio.h>

#include <string.h>

#define MAX_LENGTH 100

int main() {

    char message[MAX_LENGTH];

    int i, length;

    printf("Enter a message: ");

    for (i = 0; i < MAX_LENGTH - 1 && (message[i] = getchar()) != '\n'; i++);

    length = i;

    printf("Reversal is: ");

    for (i = 0; i < length; i++) {

        putchar(message[i]);

    }

    putchar('\n');

    return 0;

}
Feedback:
    * dasasdasdasd
    * dasdasdasdasdasdasdasd
    * dasdadasdasd
-----------------------------------------------------------------------
-----------------------------------------------------------------------
Part-2 Reverse the string[*pointers]
-----------------------------------------------------------------------
 -15   Error:Segmentation fault (core dumped)
-----------------------------------------------------------------------
#include <stdio.h>

#include <string.h>

#define MAX_LENGTH 100

int main(void) {

    char *message;

    char *p;

    printf("Enter a message: ");

    scanf("%s",message);

    p = message + strlen(message) - 1;

    printf("Reversal is: ");

    while (&p >= message) {

        putchar(*p);

        p--;

    }

    printf("\n");

    return 0;

}

Feedback:
    * dasdasdasd
-----------------------------------------------------------------------
-----------------------------------------------------------------------
Part-3 Reading lines from a file
-----------------------------------------------------------------------
10 items found out of 10
      Test String:['Apple', 'Banana', 'Strawberry', 'Blueberry', 'Raspberry', 'Watermelon', 'Cantaloupe', 'Peach', 'Kiwi', 'Apricot']
      Your output:['Apple', 'Banana', 'Strawberry', 'Blueberry', 'Raspberry', 'Watermelon', 'Cantaloupe', 'Peach', 'Kiwi', 'Apricot']
-----------------------------------------------------------------------
       All tests passed
#include <stdio.h>

#include <string.h>

#include <stdlib.h>

int main() {

	FILE *fp;

	char line[101];

	fp = fopen("fruits.txt", "r");

	if (fp == NULL) {

		printf("Can't open file \n");

		exit(-1);

	}

	while (fgets(line, 100, fp) != NULL) {

		printf("I read line= %s \n", line);

	}

}

Feedback:
    * asdasdasd
-----------------------------------------------------------------------
